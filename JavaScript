Destruturing, Spread operator, template literals , ternaries
Promises
Async / await
Map, filter, reduce, sort.


Softwares :
Quokka - to see values like prompts.
eslint - complier time error and suggestions
react-developer tool - to see the component details in console.


Main elements : 

Components, Props, JSX

Components : - Data, logic and Apperance
    React app are entirely made of components like building block of UI.
    We build complex UIs by building multiple components and combining them.
    Components can be reused, nested inside each other and pass data between them.
    Component Composition: Combining different component using "children " prop. it is like reducing the tight coupling.
        eg: <Model />
        function Model(){
        <> <Success /> </> - here Model componet is tightly packed with Success and we cannot pass anyother.
        }
or 
        <Model > <Success /> </Model>
        <Model > <Error /> </Model>
        function Model({children}){
        <> {children} </> - Here we can pass anything, losely coupling.
        }

JSX : - JavaScript, CSS and HTML
    Declarative syntax to describe whata component look like and how they work
    Components must return a block of JSX
    Each JSX element is converted to a React.createElement function call. 

Props : - Used to transfer data from parent to child component. Immutable. 
    we can pass any data as Props like list, object, String, number,...

State : - holds single local component variable.
    Data that a component can hold over time, like remember throughtout the apps lifecycle.
    Updating component state triggerss react to re-render the component.
    State needs to be place in High level function and not inside of the other sub functions.
    Update the componet view everytime, when there is a change.
    Persist local variable between render.
